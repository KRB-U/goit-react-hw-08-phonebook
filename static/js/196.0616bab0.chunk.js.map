{"version":3,"file":"static/js/196.0616bab0.chunk.js","mappings":"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","sources":["pages/Contacts.styled.js","components/redux/contcts/selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","Spiner/Spiner.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerWrapper = styled.div`\n  margin-top: 20px;\n  margin: 0 auto;\n  width: 800px;\n  border: 2px solid #8dbdff;\n  border-radius: 10px;\n  background-color: #f2f7ff;\n`;\n\nexport const TitlePhonebook = styled.h1`\n  margin-bottom: 15px;\n  text-align: center;\n`;\n\nexport const TitleContacts = styled.h1`\n  margin-bottom: 15px;\n  text-align: center;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    const normalizedFilter = filterValue.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { deleteContact } from 'components/redux/contcts/operations';\nimport { selectVisibleContacts } from 'components/redux/contcts/selectors';\n\nimport toast from 'react-hot-toast';\n\n//MUI_ICON\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  IconButton,\n} from '@mui/material';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const filteredContacts = useSelector(selectVisibleContacts);\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n    toast.success('Видалено');\n  };\n\n  return (\n    <div>\n      <Table>\n        <TableHead\n          sx={{\n            bgcolor: 'background.paper',\n            boxShadow: 1,\n            fontSize: 14,\n          }}\n        >\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Number</TableCell>\n            <TableCell>Remove</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {filteredContacts.map(({ name, number, id }) => (\n            <TableRow key={id}>\n              <TableCell>{name}</TableCell>\n              <TableCell>{number}</TableCell>\n              <TableCell>\n                <IconButton\n                  aria-label=\"delete\"\n                  color=\"error\"\n                  onClick={() => handleDeleteContact(id)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <ul></ul>\n    </div>\n  );\n};\n\nexport { ContactList };\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from 'components/redux/contcts/operations';\nimport { selectContacts } from 'components/redux/contcts/selectors';\n\n// NOTIFY\nimport toast from 'react-hot-toast';\n\nimport { nanoid } from 'nanoid';\n\n// import {\n//   FormContainer,\n//   LabelInputName,\n//   InputName,\n//   LabelInputPhone,\n//   InputPhone,\n//   // Button,\n// } from './ContactForm.styled';\n\n//MUI\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  Container,\n  Input,\n} from '@mui/material';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const allContacts = useSelector(selectContacts);\n\n  const formNameUniqueKey = nanoid(10);\n  const formNumberUniqueKey = nanoid(7);\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const isNameInContacts = allContacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isNameInContacts) {\n      toast.error(`контакт з іменем ${name} вже є`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    toast.success('Додано');\n    reset();\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <FormControl fullWidth sx={{ marginBottom: '1rem' }}>\n          <InputLabel htmlFor={formNameUniqueKey}>Name</InputLabel>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            required\n            value={name}\n            onChange={handleChange}\n            id={formNameUniqueKey}\n          />\n        </FormControl>\n\n        <FormControl fullWidth sx={{ marginBottom: '1rem' }}>\n          <InputLabel htmlFor={formNumberUniqueKey}>Number</InputLabel>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            required\n            value={number}\n            onChange={handleChange}\n            id={formNumberUniqueKey}\n          />\n        </FormControl>\n\n        <Button variant=\"contained\" type=\"submit\">\n          Add contact\n        </Button>\n      </form>\n    </Container>\n  );\n};\n\nexport { ContactForm };\n","import { useDispatch } from 'react-redux';\n// import { FilterContainer, InputItem, LabelInput } from './Filter.styled';\nimport { setFilterValue } from 'components/redux/contcts/filterSlice';\n\nimport { FormControl, InputLabel, Input } from '@mui/material';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = evt => {\n    const filterValue = evt.target.value;\n    dispatch(setFilterValue(filterValue));\n  };\n\n  return (\n    <FormControl fullWidth sx={{ marginBottom: '1rem' }}>\n      <InputLabel>Find contacts by name</InputLabel>\n      <Input type=\"text\" onChange={handleChange} />\n    </FormControl>\n  );\n};\nexport { Filter };\n","import { Dna } from 'react-loader-spinner';\n\nexport const LoaderDna = () => {\n  return (\n    <Dna\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{ margin: '0 auto', display: 'flex' }}\n    />\n  );\n};\n","// TOOLKIT\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n//STYLED\nimport {\n  TitlePhonebook,\n  TitleContacts,\n  ContainerWrapper,\n} from './Contacts.styled';\n\n// COMPONENTS\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\n\n//ACTIONS-MOVEMENT\nimport {\n  selectError,\n  selectIsLoading,\n} from 'components/redux/contcts/selectors';\nimport { fetchContacts } from 'components/redux/contcts/operations';\nimport { LoaderDna } from 'Spiner/Spiner';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContainerWrapper>\n        <TitlePhonebook>Phonebook</TitlePhonebook>\n        <ContactForm />\n        <TitleContacts>Contacts</TitleContacts>\n        <Filter />\n        {isLoading && !error && <LoaderDna />}\n        <ContactList />\n        {error && <p>{error}</p>}\n      </ContainerWrapper>\n    </>\n  );\n}\n"],"names":["ContainerWrapper","styled","TitlePhonebook","TitleContacts","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","filterValue","normalizedFilter","toLowerCase","contact","name","includes","ContactList","dispatch","useDispatch","filteredContacts","useSelector","Table","TableHead","sx","bgcolor","boxShadow","fontSize","TableRow","TableCell","TableBody","map","number","id","IconButton","color","onClick","deleteContact","toast","handleDeleteContact","Delete","ContactForm","useState","setName","setNumber","allContacts","formNameUniqueKey","nanoid","formNumberUniqueKey","handleChange","evt","target","value","Container","onSubmit","preventDefault","some","addContact","FormControl","fullWidth","marginBottom","InputLabel","htmlFor","Input","type","required","onChange","Button","variant","Filter","setFilterValue","LoaderDna","visible","height","width","ariaLabel","wrapperStyle","margin","display","Contacts","useEffect","fetchContacts"],"sourceRoot":""}