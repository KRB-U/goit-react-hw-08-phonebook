{"version":3,"file":"static/js/398.b1ee7f10.chunk.js","mappings":"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","sources":["pages/Contacts.styled.js","components/ContactList/ContactList.styled.js","components/redux/contcts/selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","Spiner/Spiner.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerWrapper = styled.div`\n  margin: 0 auto;\n  width: 800px;\n  border: 2px solid #337ab7;\n  border-radius: 10px;\n  background-color: #dcedcf;\n`;\n\nexport const TitlePhonebook = styled.h1`\n  margin-bottom: 15px;\n  text-align: center;\n`;\n\nexport const TitleContacts = styled.h1`\n  margin-bottom: 15px;\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  margin: 0 auto;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  width: 370px;\n  justify-content: space-between;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  border-radius: 5px;\n\n  cursor: pointer;\n\n  width: fit-content;\n  height: 25px;\n\n  display: flex;\n  align-items: center;\n  padding: 10px;\n\n  color: white;\n  background-color: #633366;\n  border: none;\n\n  &:hover {\n    background-color: #007cca;\n  }\n\n  &:active {\n    background-color: #ff4500;\n    color: white;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    const normalizedFilter = filterValue.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Button, ContactItem } from './ContactList.styled';\n\nimport { deleteContact } from 'components/redux/contcts/operations';\nimport { selectVisibleContacts } from 'components/redux/contcts/selectors';\nimport toast from 'react-hot-toast';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const filteredContacts = useSelector(selectVisibleContacts);\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n    toast.success('Видалено');\n  };\n\n  return (\n    <div>\n      <ul>\n        {filteredContacts.map(({ name, number, id }) => (\n          <ContactItem key={id}>\n            {name}: {number}\n            <Button type=\"submit\" onClick={() => handleDeleteContact(id)}>\n              Delete\n            </Button>\n          </ContactItem>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport { ContactList };\n","import styled from 'styled-components';\n\nconst FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-bottom: 30px;\n`;\n\nconst LabelInputName = styled.label`\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst InputName = styled.input`\n  margin-right: 25px;\n`;\n\nconst LabelInputPhone = styled.label`\n  font-size: 17px;\n  margin-right: 5px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst InputPhone = styled.input`\n  margin-bottom: 10px;\n  margin-right: 20px;\n`;\n\nconst Button = styled.button`\n  border: none;\n  border-radius: 5px;\n\n  background-color: #336699;\n  cursor: pointer;\n\n  width: fit-content;\n  height: 25px;\n\n  color: black;\n\n  &:hover {\n    background-color: #ffa07a;\n    color: white;\n  }\n`;\n\nexport {\n  FormContainer,\n  LabelInputName,\n  InputName,\n  LabelInputPhone,\n  InputPhone,\n  Button,\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from 'components/redux/contcts/operations';\nimport { selectContacts } from 'components/redux/contcts/selectors';\n\n// NOTIFY\nimport toast from 'react-hot-toast';\n\nimport { nanoid } from 'nanoid';\n\nimport {\n  FormContainer,\n  LabelInputName,\n  InputName,\n  LabelInputPhone,\n  InputPhone,\n  Button,\n} from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const allContacts = useSelector(selectContacts);\n\n  const formNameUniqueKey = nanoid(10);\n  const formNumberUniqueKey = nanoid(7);\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const isNameInContacts = allContacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isNameInContacts) {\n      toast.error(`контакт з іменем ${name} вже є`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    toast.success('Додано');\n    reset();\n  };\n\n  return (\n    <FormContainer>\n      <form onSubmit={handleSubmit}>\n        <LabelInputName htmlFor={formNameUniqueKey}>\n          Name\n          <InputName\n            type=\"text\"\n            name=\"name\"\n            required\n            value={name}\n            onChange={handleChange}\n            id={formNameUniqueKey}\n          />\n        </LabelInputName>\n\n        <LabelInputPhone htmlFor={formNumberUniqueKey}>\n          Number\n          <InputPhone\n            type=\"tel\"\n            name=\"number\"\n            required\n            value={number}\n            onChange={handleChange}\n            id={formNumberUniqueKey}\n          />\n        </LabelInputPhone>\n\n        <Button type=\"submit\">Add contact</Button>\n      </form>\n    </FormContainer>\n  );\n};\n\nexport { ContactForm };\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-bottom: 30px;\n`;\n\nexport const InputItem = styled.input`\n  text-align: center;\n  margin-left: 15px;\n`;\n\nexport const LabelInput = styled.label`\n  font-size: 17px;\n  margin-bottom: 10px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { FilterContainer, InputItem, LabelInput } from './Filter.styled';\nimport { setFilterValue } from 'components/redux/contcts/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = evt => {\n    const filterValue = evt.target.value;\n    dispatch(setFilterValue(filterValue));\n  };\n\n  return (\n    <FilterContainer>\n      <LabelInput>Find contacts by name</LabelInput>\n      <InputItem type=\"text\" onChange={handleChange} />\n    </FilterContainer>\n  );\n};\nexport { Filter };\n","import { Dna } from 'react-loader-spinner';\n\nexport const LoaderDna = () => {\n  return (\n    <Dna\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n      wrapperClass=\"dna-wrapper\"\n    />\n  );\n};\n","// TOOLKIT\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n//STYLED\nimport {\n  TitlePhonebook,\n  TitleContacts,\n  ContainerWrapper,\n} from './Contacts.styled';\n\n// COMPONENTS\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\n\n//ACTIONS-MOVEMENT\nimport {\n  selectError,\n  selectIsLoading,\n} from 'components/redux/contcts/selectors';\nimport { fetchContacts } from 'components/redux/contcts/operations';\nimport { LoaderDna } from 'Spiner/Spiner';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContainerWrapper>\n        <TitlePhonebook>Phonebook</TitlePhonebook>\n        <ContactForm />\n        <TitleContacts>Contacts</TitleContacts>\n        <Filter />\n\n        {isLoading && !error && <LoaderDna />}\n        {error && <p>{error}</p>}\n\n        <ContactList />\n      </ContainerWrapper>\n    </>\n  );\n}\n"],"names":["ContainerWrapper","styled","TitlePhonebook","TitleContacts","ContactItem","Button","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","filterValue","normalizedFilter","toLowerCase","contact","name","includes","ContactList","dispatch","useDispatch","filteredContacts","useSelector","map","number","id","type","onClick","deleteContact","toast","handleDeleteContact","FormContainer","LabelInputName","InputName","LabelInputPhone","InputPhone","ContactForm","useState","setName","setNumber","allContacts","formNameUniqueKey","nanoid","formNumberUniqueKey","handleChange","evt","target","value","onSubmit","preventDefault","some","addContact","htmlFor","required","onChange","FilterContainer","InputItem","LabelInput","Filter","setFilterValue","LoaderDna","visible","height","width","ariaLabel","wrapperStyle","position","top","left","transform","wrapperClass","Contacts","useEffect","fetchContacts"],"sourceRoot":""}