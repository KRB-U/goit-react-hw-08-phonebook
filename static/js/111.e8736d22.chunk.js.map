{"version":3,"file":"static/js/111.e8736d22.chunk.js","mappings":"uTAiIMA,GAAeC,EAAAA,EAAAA,KAEN,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAiBjB,OACE,SAACC,EAAA,EAAD,CAAeC,MAAON,EAAtB,UACE,UAACO,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,WACE,SAACC,EAAA,GAAD,KACA,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYb,UAAU,KAAKc,QAAQ,KAAnC,SAAwC,YAGxC,UAACX,EAAA,EAAD,CACEH,UAAU,OACVe,SAnCW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAO,IAAIC,SAASH,EAAMI,eAChCzB,GACE0B,EAAAA,EAAAA,IAAM,CACJC,MAAOJ,EAAKK,IAAI,SAChBC,SAAUN,EAAKK,IAAI,cAOxB,EAuBSE,YAAU,EACVrB,GAAI,CAAEsB,GAAI,GAJZ,WAME,SAACC,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,KAEX,SAACR,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNI,KAAK,WACLL,GAAG,WACHG,aAAa,sBAGf,SAACG,EAAA,EAAD,CACED,KAAK,SACLN,WAAS,EACThB,QAAQ,YACRV,GAAI,CAAEsB,GAAI,EAAGY,GAAI,GAJnB,SAKC,qBAQZ,CC3Mc,SAASC,IACtB,OACE,0BAGE,SAAC7C,EAAD,KAIL,C,0BCVG8C,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,gOACD,gBACJN,EAAQ,EAAUG,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login.jsx","../node_modules/@mui/icons-material/LockOutlined.js"],"sourcesContent":["import { logIn } from 'components/redux/auth/operations';\nimport { useDispatch } from 'react-redux';\n\n// import { Formik, Field } from 'formik';\n// import {\n//   Box,\n//   Button,\n//   Checkbox,\n//   Flex,\n//   FormControl,\n//   FormLabel,\n//   FormErrorMessage,\n//   Input,\n//   VStack,\n// } from '@chakra-ui/react';\n\n// import toast from 'react-hot-toast';\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\n// export const LoginForm = () => {\n//   const dispatch = useDispatch();\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n\n//     const form = e.currentTarget;\n\n//     dispatch(\n//       logIn({\n//         email: form.elements.email.value,\n//         password: form.elements.password.value,\n//       })\n//     );\n//     form.reset();\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit} autoComplete=\"off\">\n//       <label>\n//         Email\n//         <input type=\"email\" name=\"email\" />\n//       </label>\n//       <label>\n//         Password\n//         <input type=\"password\" name=\"password\" />\n//       </label>\n//       <button type=\"submit\">Log In</button>\n//     </form>\n//   );\n\n// return (\n//   <Flex bg=\"gray.100\" align=\"center\" justify=\"center\" h=\"100vh\">\n//     <Box bg=\"white\" p={6} rounded=\"md\" w={64}>\n//       <Formik\n//         initialValues={{\n//           email: '',\n//           password: '',\n//           rememberMe: false,\n//         }}\n//         onSubmit={values => {\n//           dispatch(logIn(values))\n//             .unwrap()\n//             .then(() => {\n//               toast.success('успіх');\n//             })\n//             .catch(() => toast.error('такою юзера нема'));\n//         }}\n//       >\n//         {({ handleSubmit, errors, touched }) => (\n//           <form onSubmit={handleSubmit}>\n//             <VStack spacing={4} align=\"flex-start\">\n//               <FormControl>\n//                 <FormLabel htmlFor=\"email\">Email Address</FormLabel>\n//                 <Field\n//                   as={Input}\n//                   id=\"email\"\n//                   name=\"email\"\n//                   type=\"email\"\n//                   variant=\"filled\"\n//                 />\n//               </FormControl>\n//               <FormControl isInvalid={!!errors.password && touched.password}>\n//                 <FormLabel htmlFor=\"password\">Password</FormLabel>\n//                 <Field\n//                   as={Input}\n//                   id=\"password\"\n//                   name=\"password\"\n//                   type=\"password\"\n//                   variant=\"filled\"\n//                   validate={value => {\n//                     let error;\n\n//                     if (value.length < 6) {\n//                       error = 'Password must contain at least 6 characters';\n//                     }\n//                     return error;\n//                   }}\n//                 />\n//                 <FormErrorMessage>{errors.password}</FormErrorMessage>\n//               </FormControl>\n//               <Field\n//                 as={Checkbox}\n//                 id=\"rememberMe\"\n//                 name=\"rememberMe\"\n//                 colorScheme=\"purple\"\n//               >\n//                 Remember me?\n//               </Field>\n//               <Button type=\"submit\" colorScheme=\"purple\" width=\"full\">\n//                 Login\n//               </Button>\n//             </VStack>\n//           </form>\n//         )}\n//       </Formik>\n//     </Box>\n//   </Flex>\n// );,\n// };\n\nconst defaultTheme = createTheme();\n\nexport default function SignIn() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    dispatch(\n      logIn({\n        email: data.get('email'),\n        password: data.get('password'),\n      })\n    );\n    // console.log({\n    //   email: data.get('email'),\n    //   password: data.get('password'),\n    // });\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Log in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Log In\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import SignIn from 'components/LoginForm/LoginForm';\n// STYLES\n// import { ChakraProvider } from '@chakra-ui/react';\n\nexport default function Login() {\n  return (\n    <div>\n      {/* <ChakraProvider> */}\n      {/* <LoginForm /> */}\n      <SignIn></SignIn>\n      {/* </ChakraProvider> */}\n    </div>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');\nexports.default = _default;"],"names":["defaultTheme","createTheme","SignIn","dispatch","useDispatch","ThemeProvider","theme","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","variant","onSubmit","event","preventDefault","data","FormData","currentTarget","logIn","email","get","password","noValidate","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","Button","mb","Login","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}