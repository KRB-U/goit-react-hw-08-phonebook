{"version":3,"file":"static/js/45.df120c36.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/checkbox/src/checkbox-context.ts","../node_modules/@chakra-ui/checkbox/src/checkbox-icon.tsx","../node_modules/@chakra-ui/visually-hidden/src/visually-hidden.style.ts","../node_modules/@zag-js/dom-query/src/attrs.ts","../node_modules/@zag-js/focus-visible/src/index.ts","../node_modules/@chakra-ui/checkbox/src/use-checkbox.ts","../node_modules/@chakra-ui/checkbox/src/checkbox.tsx","../node_modules/@chakra-ui/checkbox/src/use-initial-animation-state.tsx","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import { createContext } from \"@chakra-ui/react-context\"\nimport { CheckboxGroupContext } from \"./checkbox-types\"\n\nexport const [CheckboxGroupProvider, useCheckboxGroupContext] =\n  createContext<CheckboxGroupContext>({\n    name: \"CheckboxGroupContext\",\n    strict: false,\n  })\n","import { chakra, HTMLChakraProps, PropsOf } from \"@chakra-ui/system\"\n\nfunction CheckIcon(props: PropsOf<typeof chakra.svg>) {\n  return (\n    <chakra.svg\n      width=\"1.2em\"\n      viewBox=\"0 0 12 10\"\n      style={{\n        fill: \"none\",\n        strokeWidth: 2,\n        stroke: \"currentColor\",\n        strokeDasharray: 16,\n      }}\n      {...props}\n    >\n      <polyline points=\"1.5 6 4.5 9 10.5 1\" />\n    </chakra.svg>\n  )\n}\n\nfunction IndeterminateIcon(props: PropsOf<typeof chakra.svg>) {\n  return (\n    <chakra.svg\n      width=\"1.2em\"\n      viewBox=\"0 0 24 24\"\n      style={{ stroke: \"currentColor\", strokeWidth: 4 }}\n      {...props}\n    >\n      <line x1=\"21\" x2=\"3\" y1=\"12\" y2=\"12\" />\n    </chakra.svg>\n  )\n}\n\nexport interface CheckboxIconProps extends HTMLChakraProps<\"svg\"> {\n  /**\n   * @default false\n   */\n  isIndeterminate?: boolean\n  /**\n   * @default false\n   */\n  isChecked?: boolean\n}\n\n/**\n * CheckboxIcon is used to visually indicate the checked or indeterminate\n * state of a checkbox.\n *\n * @todo allow users pass their own icon svgs\n */\nexport function CheckboxIcon(props: CheckboxIconProps) {\n  const { isIndeterminate, isChecked, ...rest } = props\n  const BaseIcon = isIndeterminate ? IndeterminateIcon : CheckIcon\n\n  return isChecked || isIndeterminate ? (\n    <chakra.div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\",\n      }}\n    >\n      <BaseIcon {...rest} />\n    </chakra.div>\n  ) : null\n}\n","/**\n * Styles to visually hide an element\n * but make it accessible to screen-readers\n */\nexport const visuallyHiddenStyle: React.CSSProperties = {\n  border: \"0\",\n  clip: \"rect(0, 0, 0, 0)\",\n  height: \"1px\",\n  width: \"1px\",\n  margin: \"-1px\",\n  padding: \"0\",\n  overflow: \"hidden\",\n  whiteSpace: \"nowrap\",\n  position: \"absolute\",\n}\n","type Booleanish = boolean | \"true\" | \"false\"\n\nexport const dataAttr = (guard: boolean | undefined) => {\n  return (guard ? \"\" : undefined) as Booleanish\n}\n\nexport const ariaAttr = (guard: boolean | undefined) => {\n  return guard ? \"true\" : undefined\n}\n","import { isDom } from \"@zag-js/dom-query\"\n\ntype Modality = \"keyboard\" | \"pointer\" | \"virtual\"\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent\ntype Handler = (modality: Modality, e: HandlerEvent | null) => void\ntype FocusVisibleCallback = (isFocusVisible: boolean) => void\n\nlet hasSetup = false\nlet modality: Modality | null = null\nlet hasEventBeforeFocus = false\nlet hasBlurredWindowRecently = false\n\nconst handlers = new Set<Handler>()\n\nfunction trigger(modality: Modality, event: HandlerEvent | null) {\n  handlers.forEach((handler) => handler(modality, event))\n}\n\nconst isMac = typeof window !== \"undefined\" && window.navigator != null ? /^Mac/.test(window.navigator.platform) : false\n\nfunction isValidKey(e: KeyboardEvent) {\n  return !(\n    e.metaKey ||\n    (!isMac && e.altKey) ||\n    e.ctrlKey ||\n    e.key === \"Control\" ||\n    e.key === \"Shift\" ||\n    e.key === \"Meta\"\n  )\n}\n\nfunction onKeyboardEvent(event: KeyboardEvent) {\n  hasEventBeforeFocus = true\n  if (isValidKey(event)) {\n    modality = \"keyboard\"\n    trigger(\"keyboard\", event)\n  }\n}\n\nfunction onPointerEvent(event: PointerEvent | MouseEvent) {\n  modality = \"pointer\"\n\n  if (event.type === \"mousedown\" || event.type === \"pointerdown\") {\n    hasEventBeforeFocus = true\n    const target = event.composedPath ? event.composedPath()[0] : event.target\n\n    let matches = false\n    try {\n      matches = (target as any).matches(\":focus-visible\")\n    } catch {}\n\n    if (matches) return\n    trigger(\"pointer\", event)\n  }\n}\n\nfunction isVirtualClick(event: MouseEvent | PointerEvent): boolean {\n  // JAWS/NVDA with Firefox.\n  if ((event as any).mozInputSource === 0 && event.isTrusted) return true\n  return event.detail === 0 && !(event as PointerEvent).pointerType\n}\n\nfunction onClickEvent(e: MouseEvent) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true\n    modality = \"virtual\"\n  }\n}\n\nfunction onWindowFocus(event: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (event.target === window || event.target === document) {\n    return\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to keyboard modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    modality = \"virtual\"\n    trigger(\"virtual\", event)\n  }\n\n  hasEventBeforeFocus = false\n  hasBlurredWindowRecently = false\n}\n\nfunction onWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false\n  hasBlurredWindowRecently = true\n}\n\nfunction isFocusVisible() {\n  return modality !== \"pointer\"\n}\n\nfunction setupGlobalFocusEvents() {\n  if (!isDom() || hasSetup) {\n    return\n  }\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  const { focus } = HTMLElement.prototype\n  HTMLElement.prototype.focus = function focusElement(...args) {\n    hasEventBeforeFocus = true\n    focus.apply(this, args)\n  }\n\n  document.addEventListener(\"keydown\", onKeyboardEvent, true)\n  document.addEventListener(\"keyup\", onKeyboardEvent, true)\n  document.addEventListener(\"click\", onClickEvent, true)\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  window.addEventListener(\"focus\", onWindowFocus, true)\n  window.addEventListener(\"blur\", onWindowBlur, false)\n\n  if (typeof PointerEvent !== \"undefined\") {\n    document.addEventListener(\"pointerdown\", onPointerEvent, true)\n    document.addEventListener(\"pointermove\", onPointerEvent, true)\n    document.addEventListener(\"pointerup\", onPointerEvent, true)\n  } else {\n    document.addEventListener(\"mousedown\", onPointerEvent, true)\n    document.addEventListener(\"mousemove\", onPointerEvent, true)\n    document.addEventListener(\"mouseup\", onPointerEvent, true)\n  }\n\n  hasSetup = true\n}\n\nexport function trackFocusVisible(fn: FocusVisibleCallback) {\n  setupGlobalFocusEvents()\n\n  fn(isFocusVisible())\n  const handler = () => fn(isFocusVisible())\n\n  handlers.add(handler)\n  return () => {\n    handlers.delete(handler)\n  }\n}\n\nexport function trackInteractionModality(fn: (value: Modality | null) => void) {\n  setupGlobalFocusEvents()\n\n  fn(modality)\n  const handler = () => fn(modality)\n\n  handlers.add(handler)\n  return () => {\n    handlers.delete(handler)\n  }\n}\n\nexport function setInteractionModality(value: Modality) {\n  modality = value\n  trigger(value, null)\n}\n\nexport function getInteractionModality() {\n  return modality\n}\n","import { useFormControlProps } from \"@chakra-ui/form-control\"\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\nimport type { PropGetter } from \"@chakra-ui/react-types\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { callAllHandlers, dataAttr } from \"@chakra-ui/shared-utils\"\nimport { omit } from \"@chakra-ui/object-utils\"\nimport { visuallyHiddenStyle } from \"@chakra-ui/visually-hidden\"\nimport { trackFocusVisible } from \"@zag-js/focus-visible\"\nimport { useCallback, useEffect, useRef, useState } from \"react\"\nimport { CheckboxState, UseCheckboxProps } from \"./checkbox-types\"\n\n/**\n * useCheckbox that provides all the state and focus management logic\n * for a checkbox. It is consumed by the `Checkbox` component\n *\n * @see Docs https://chakra-ui.com/checkbox#hooks\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/checkbox/\n */\nexport function useCheckbox(props: UseCheckboxProps = {}) {\n  const formControlProps = useFormControlProps(props)\n  const {\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    isInvalid,\n    id,\n    onBlur,\n    onFocus,\n    \"aria-describedby\": ariaDescribedBy,\n  } = formControlProps\n\n  const {\n    defaultChecked,\n    isChecked: checkedProp,\n    isFocusable,\n    onChange,\n    isIndeterminate,\n    name,\n    value,\n    tabIndex = undefined,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-invalid\": ariaInvalid,\n    ...rest\n  } = props\n\n  const htmlProps = omit(rest, [\n    \"isDisabled\",\n    \"isReadOnly\",\n    \"isRequired\",\n    \"isInvalid\",\n    \"id\",\n    \"onBlur\",\n    \"onFocus\",\n    \"aria-describedby\",\n  ])\n\n  const onChangeProp = useCallbackRef(onChange)\n  const onBlurProp = useCallbackRef(onBlur)\n  const onFocusProp = useCallbackRef(onFocus)\n\n  const [isFocusVisible, setIsFocusVisible] = useState(false)\n  const [isFocused, setFocused] = useState(false)\n  const [isHovered, setHovered] = useState(false)\n  const [isActive, setActive] = useState(false)\n\n  useEffect(() => {\n    return trackFocusVisible(setIsFocusVisible)\n  }, [])\n\n  const inputRef = useRef<HTMLInputElement>(null)\n  const [rootIsLabelElement, setRootIsLabelElement] = useState(true)\n\n  const [checkedState, setCheckedState] = useState(!!defaultChecked)\n\n  const isControlled = checkedProp !== undefined\n  const isChecked = isControlled ? checkedProp : checkedState\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (isReadOnly || isDisabled) {\n        event.preventDefault()\n        return\n      }\n\n      if (!isControlled) {\n        if (isChecked) {\n          setCheckedState(event.target.checked)\n        } else {\n          setCheckedState(isIndeterminate ? true : event.target.checked)\n        }\n      }\n\n      onChangeProp?.(event)\n    },\n    [\n      isReadOnly,\n      isDisabled,\n      isChecked,\n      isControlled,\n      isIndeterminate,\n      onChangeProp,\n    ],\n  )\n\n  useSafeLayoutEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate)\n    }\n  }, [isIndeterminate])\n\n  useUpdateEffect(() => {\n    if (isDisabled) {\n      setFocused(false)\n    }\n  }, [isDisabled, setFocused])\n\n  /**\n   * HTMLFormElement.reset() should reset the checkbox state\n   */\n  useSafeLayoutEffect(() => {\n    const el = inputRef.current\n    if (!el?.form) return\n    const formResetListener = () => {\n      setCheckedState(!!defaultChecked)\n    }\n    el.form.addEventListener(\"reset\", formResetListener)\n    return () => el.form?.removeEventListener(\"reset\", formResetListener)\n  }, [])\n\n  const trulyDisabled = isDisabled && !isFocusable\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === \" \") {\n        setActive(true)\n      }\n    },\n    [setActive],\n  )\n\n  const onKeyUp = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === \" \") {\n        setActive(false)\n      }\n    },\n    [setActive],\n  )\n\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   *\n   * These libraries set the checked value for input fields\n   * using their refs. For the checkbox, it sets `ref.current.checked = true | false` directly.\n   *\n   * This means the `isChecked` state will get out of sync with `ref.current.checked`,\n   * even though the input validation with work, the UI will not be up to date.\n   *\n   * Let's correct that by checking and syncing the state accordingly.\n   */\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current) return\n    const notInSync = inputRef.current.checked !== isChecked\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked)\n    }\n  }, [inputRef.current])\n\n  const getCheckboxProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => {\n      const onPressDown = (event: React.MouseEvent) => {\n        // On mousedown, the input blurs and returns focus to the `body`,\n        // we need to prevent this. Native checkboxes keeps focus on `input`\n        if (isFocused) {\n          event.preventDefault()\n        }\n        setActive(true)\n      }\n\n      return {\n        ...props,\n        ref: forwardedRef,\n        \"data-active\": dataAttr(isActive),\n        \"data-hover\": dataAttr(isHovered),\n        \"data-checked\": dataAttr(isChecked),\n        \"data-focus\": dataAttr(isFocused),\n        \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n        \"data-indeterminate\": dataAttr(isIndeterminate),\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(isInvalid),\n        \"data-readonly\": dataAttr(isReadOnly),\n        \"aria-hidden\": true,\n        onMouseDown: callAllHandlers(props.onMouseDown, onPressDown),\n        onMouseUp: callAllHandlers(props.onMouseUp, () => setActive(false)),\n        onMouseEnter: callAllHandlers(props.onMouseEnter, () =>\n          setHovered(true),\n        ),\n        onMouseLeave: callAllHandlers(props.onMouseLeave, () =>\n          setHovered(false),\n        ),\n      }\n    },\n    [\n      isActive,\n      isChecked,\n      isDisabled,\n      isFocused,\n      isFocusVisible,\n      isHovered,\n      isIndeterminate,\n      isInvalid,\n      isReadOnly,\n    ],\n  )\n\n  const getIndicatorProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n    }),\n    [\n      isActive,\n      isChecked,\n      isDisabled,\n      isFocused,\n      isFocusVisible,\n      isHovered,\n      isIndeterminate,\n      isInvalid,\n      isReadOnly,\n    ],\n  )\n\n  const getRootProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => ({\n      ...htmlProps,\n      ...props,\n      ref: mergeRefs(forwardedRef, (node: HTMLElement) => {\n        if (!node) return\n        setRootIsLabelElement(node.tagName === \"LABEL\")\n      }),\n      onClick: callAllHandlers(props.onClick, () => {\n        /**\n         * Accessibility:\n         *\n         * Ideally, `getRootProps` should be spread unto a `label` element.\n         *\n         * If the element was changed using the `as` prop or changing\n         * the dom node `getRootProps` is spread unto (to a `div` or `span`), we'll trigger\n         * click on the input when the element is clicked.\n         * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3480\n         */\n        if (!rootIsLabelElement) {\n          inputRef.current?.click()\n          requestAnimationFrame(() => {\n            inputRef.current?.focus({ preventScroll: true })\n          })\n        }\n      }),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid),\n    }),\n    [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement],\n  )\n\n  const getInputProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => {\n      return {\n        ...props,\n        ref: mergeRefs(inputRef, forwardedRef),\n        type: \"checkbox\",\n        name,\n        value,\n        id,\n        tabIndex,\n        onChange: callAllHandlers(props.onChange, handleChange),\n        onBlur: callAllHandlers(props.onBlur, onBlurProp, () =>\n          setFocused(false),\n        ),\n        onFocus: callAllHandlers(props.onFocus, onFocusProp, () =>\n          setFocused(true),\n        ),\n        onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n        onKeyUp: callAllHandlers(props.onKeyUp, onKeyUp),\n        required: isRequired,\n        checked: isChecked,\n        disabled: trulyDisabled,\n        readOnly: isReadOnly,\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n        \"aria-describedby\": ariaDescribedBy,\n        \"aria-disabled\": isDisabled,\n        style: visuallyHiddenStyle,\n      }\n    },\n    [\n      name,\n      value,\n      id,\n      handleChange,\n      onBlurProp,\n      onFocusProp,\n      onKeyDown,\n      onKeyUp,\n      isRequired,\n      isChecked,\n      trulyDisabled,\n      isReadOnly,\n      ariaLabel,\n      ariaLabelledBy,\n      ariaInvalid,\n      isInvalid,\n      ariaDescribedBy,\n      isDisabled,\n      tabIndex,\n    ],\n  )\n\n  const getLabelProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      onMouseDown: callAllHandlers(props.onMouseDown, stopEvent),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid),\n    }),\n    [isChecked, isDisabled, isInvalid],\n  )\n\n  const state: CheckboxState = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isIndeterminate,\n    isDisabled,\n    isReadOnly,\n    isRequired,\n  }\n\n  return {\n    state,\n    getRootProps,\n    getCheckboxProps,\n    getIndicatorProps,\n    getInputProps,\n    getLabelProps,\n    htmlProps,\n  }\n}\n\n/**\n * Prevent `onBlur` being fired when the checkbox label is touched\n */\nfunction stopEvent(event: React.SyntheticEvent) {\n  event.preventDefault()\n  event.stopPropagation()\n}\n\nexport type UseCheckboxReturn = ReturnType<typeof useCheckbox>\n","import { callAll, cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  PropsOf,\n  SystemStyleObject,\n  ThemingProps,\n  chakra,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cloneElement, useMemo } from \"react\"\nimport { useCheckboxGroupContext } from \"./checkbox-context\"\nimport { CheckboxIcon } from \"./checkbox-icon\"\nimport { CheckboxOptions, UseCheckboxProps } from \"./checkbox-types\"\nimport { useCheckbox } from \"./use-checkbox\"\nimport { useInitialAnimationState } from \"./use-initial-animation-state\"\n\nconst controlStyles: SystemStyleObject = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0,\n}\n\nconst rootStyles: SystemStyleObject = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\",\n}\n\nconst checkAnim = keyframes({\n  from: {\n    opacity: 0,\n    strokeDashoffset: 16,\n    transform: \"scale(0.95)\",\n  },\n  to: {\n    opacity: 1,\n    strokeDashoffset: 0,\n    transform: \"scale(1)\",\n  },\n})\n\nconst indeterminateOpacityAnim = keyframes({\n  from: {\n    opacity: 0,\n  },\n  to: {\n    opacity: 1,\n  },\n})\nconst indeterminateScaleAnim = keyframes({\n  from: {\n    transform: \"scaleX(0.65)\",\n  },\n  to: {\n    transform: \"scaleX(1)\",\n  },\n})\n\ntype CheckboxControlProps = Omit<HTMLChakraProps<\"div\">, keyof UseCheckboxProps>\n\ntype BaseInputProps = Pick<\n  PropsOf<\"input\">,\n  \"onBlur\" | \"checked\" | \"defaultChecked\"\n>\n\nexport interface CheckboxProps\n  extends CheckboxControlProps,\n    BaseInputProps,\n    ThemingProps<\"Checkbox\">,\n    UseCheckboxProps,\n    CheckboxOptions {}\n\n/**\n * Checkbox\n *\n * React component used in forms when a user needs to select\n * multiple values from several options.\n *\n * @see Docs https://chakra-ui.com/checkbox\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/checkbox/\n */\nexport const Checkbox = forwardRef<CheckboxProps, \"input\">(function Checkbox(\n  props,\n  ref,\n) {\n  const group = useCheckboxGroupContext()\n\n  const mergedProps = { ...group, ...props } as CheckboxProps\n  const styles = useMultiStyleConfig(\"Checkbox\", mergedProps)\n\n  const ownProps = omitThemingProps(props)\n\n  const {\n    spacing = \"0.5rem\",\n    className,\n    children,\n    iconColor,\n    iconSize,\n    icon = <CheckboxIcon />,\n    isChecked: isCheckedProp,\n    isDisabled = group?.isDisabled,\n    onChange: onChangeProp,\n    inputProps,\n    ...rest\n  } = ownProps\n\n  let isChecked = isCheckedProp\n  if (group?.value && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value)\n  }\n\n  let onChange = onChangeProp\n  if (group?.onChange && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp)\n  }\n\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    getRootProps,\n  } = useCheckbox({\n    ...rest,\n    isDisabled,\n    isChecked,\n    onChange,\n  })\n\n  const shouldAnimate = useInitialAnimationState(state.isChecked)\n\n  const iconStyles: SystemStyleObject = useMemo(\n    () => ({\n      animation: !shouldAnimate\n        ? undefined\n        : state.isIndeterminate\n        ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear`\n        : `${checkAnim} 200ms linear`,\n      fontSize: iconSize,\n      color: iconColor,\n      ...styles.icon,\n    }),\n    [iconColor, iconSize, shouldAnimate, state.isIndeterminate, styles.icon],\n  )\n\n  const clonedIcon = cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked,\n  })\n\n  return (\n    <chakra.label\n      __css={{ ...rootStyles, ...styles.container }}\n      className={cx(\"chakra-checkbox\", className)}\n      {...getRootProps()}\n    >\n      <input\n        className=\"chakra-checkbox__input\"\n        {...getInputProps(inputProps, ref)}\n      />\n      <chakra.span\n        __css={{ ...controlStyles, ...styles.control }}\n        className=\"chakra-checkbox__control\"\n        {...getCheckboxProps()}\n      >\n        {clonedIcon}\n      </chakra.span>\n      {children && (\n        <chakra.span\n          className=\"chakra-checkbox__label\"\n          {...getLabelProps()}\n          __css={{\n            marginStart: spacing,\n            ...styles.label,\n          }}\n        >\n          {children}\n        </chakra.span>\n      )}\n    </chakra.label>\n  )\n})\n\nCheckbox.displayName = \"Checkbox\"\n","import { useState } from \"react\"\n\nexport function useInitialAnimationState(isChecked: boolean) {\n  const [previousIsChecked, setPreviousIsChecked] = useState(isChecked)\n  const [shouldAnimate, setShouldAnimate] = useState(false)\n\n  if (isChecked !== previousIsChecked) {\n    setShouldAnimate(true)\n    setPreviousIsChecked(isChecked)\n  }\n\n  return shouldAnimate\n}\n","import { logIn } from 'components/redux/auth/operations';\nimport { useDispatch } from 'react-redux';\n\nimport { Formik, Field } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Flex,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\n\nimport toast from 'react-hot-toast';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n\n  //   const form = e.currentTarget;\n\n  //   dispatch(\n  //     logIn({\n  //       email: form.elements.email.value,\n  //       password: form.elements.password.value,\n  //     })\n  //   );\n  //   form.reset();\n  // };\n\n  // return (\n  //   <form onSubmit={handleSubmit} autoComplete=\"off\">\n  //     <label>\n  //       Email\n  //       <input type=\"email\" name=\"email\" />\n  //     </label>\n  //     <label>\n  //       Password\n  //       <input type=\"password\" name=\"password\" />\n  //     </label>\n  //     <button type=\"submit\">Log In</button>\n  //   </form>\n  // );\n\n  return (\n    <Flex bg=\"gray.100\" align=\"center\" justify=\"center\" h=\"100vh\">\n      <Box bg=\"white\" p={6} rounded=\"md\" w={64}>\n        <Formik\n          initialValues={{\n            email: '',\n            password: '',\n            rememberMe: false,\n          }}\n          onSubmit={values => {\n            dispatch(logIn(values))\n              .unwrap()\n              .then(() => {\n                toast.success('успіх');\n              })\n              .catch(() => toast.error('такою юзера нема'));\n          }}\n        >\n          {({ handleSubmit, errors, touched }) => (\n            <form onSubmit={handleSubmit}>\n              <VStack spacing={4} align=\"flex-start\">\n                <FormControl>\n                  <FormLabel htmlFor=\"email\">Email Address</FormLabel>\n                  <Field\n                    as={Input}\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    variant=\"filled\"\n                  />\n                </FormControl>\n                <FormControl isInvalid={!!errors.password && touched.password}>\n                  <FormLabel htmlFor=\"password\">Password</FormLabel>\n                  <Field\n                    as={Input}\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    variant=\"filled\"\n                    validate={value => {\n                      let error;\n\n                      if (value.length < 6) {\n                        error = 'Password must contain at least 6 characters';\n                      }\n                      return error;\n                    }}\n                  />\n                  <FormErrorMessage>{errors.password}</FormErrorMessage>\n                </FormControl>\n                <Field\n                  as={Checkbox}\n                  id=\"rememberMe\"\n                  name=\"rememberMe\"\n                  colorScheme=\"purple\"\n                >\n                  Remember me?\n                </Field>\n                <Button type=\"submit\" colorScheme=\"purple\" width=\"full\">\n                  Login\n                </Button>\n              </VStack>\n            </form>\n          )}\n        </Formik>\n      </Box>\n    </Flex>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n// STYLES\nimport { ChakraProvider } from '@chakra-ui/react';\n\nexport default function Login() {\n  return (\n    <div>\n      <ChakraProvider>\n        <LoginForm />\n      </ChakraProvider>\n    </div>\n  );\n}\n"],"names":["createContext","name","strict","useCheckboxGroupContext","props","svg","CheckIcon","chakra","viewBox","style","fill","strokeWidth","stroke","strokeDasharray","children","points","IndeterminateIcon","x1","x2","y1","y2","CheckboxIcon","isIndeterminate","isChecked","rest","BaseIcon","div","alignItems","justifyContent","height","visuallyHiddenStyle","border","clip","width","margin","padding","overflow","whiteSpace","position","navigator","document","hasSetup","modality","hasEventBeforeFocus","hasBlurredWindowRecently","handlers","Set","trigger","event","forEach","handler","isMac","window","test","platform","isValidKey","onPointerEvent","metaKey","altKey","ctrlKey","key","onKeyboardEvent","type","target","composedPath","matches","isVirtualClick","onWindowFocus","isTrusted","detail","pointerType","onClickEvent","onWindowBlur","isFocusVisible","setupGlobalFocusEvents","focus","isDom","HTMLElement","prototype","focusElement","apply","addEventListener","PointerEvent","trackFocusVisible","fn","add","delete","trackInteractionModality","omit","object","keysToOmit","clone","Object","assign","stopPropagation","preventDefault","userSelect","flexShrink","rootStyles","cursor","checkAnim","from","opacity","strokeDashoffset","transform","to","useMemo","indeterminateOpacityAnim","indeterminateScaleAnim","Checkbox","ref","group","mergedProps","cloneElement","ownProps","spacing","className","cx","iconColor","controlStyles","iconSize","jsxs","icon","isCheckedProp","isDisabled","onChangeProp","onChange","inputProps","value","includes","useCheckbox","state","getInputProps","getCheckboxProps","keyframes","formControlProps","useFormControlProps","isReadOnly","isRequired","isInvalid","id","onBlur","onFocus","ariaDescribedBy","defaultChecked","checkedProp","isFocusable","tabIndex","ariaLabel","ariaLabelledBy","ariaInvalid","htmlProps","useCallbackRef","onBlurProp","onFocusProp","useState","setIsFocusVisible","isFocused","setFocused","isHovered","setHovered","isActive","setActive","useEffect","inputRef","useRef","rootIsLabelElement","setRootIsLabelElement","checkedState","setCheckedState","isControlled","handleChange","useCallback","checked","useSafeLayoutEffect","current","indeterminate","Boolean","useUpdateEffect","el","form","formResetListener","removeEventListener","trulyDisabled","onKeyDown","onKeyUp","notInSync","forwardedRef","onPressDown","onMouseDown","onMouseUp","dataAttr","onMouseEnter","callAllHandlers","onMouseLeave","getIndicatorProps","getRootProps","node","tagName","mergeRefs","onClick","click","requestAnimationFrame","_a","preventScroll","required","disabled","readOnly","getLabelProps","stopEvent","forwardRef","shouldAnimate","useInitialAnimationState","iconStyles","animation","previousIsChecked","setPreviousIsChecked","setShouldAnimate","callAll","fontSize","color","clonedIcon","__css","label","display","container","verticalAlign","useMultiStyleConfig","control","omitThemingProps","displayName","span","LoginForm","dispatch","useDispatch","bg","align","justify","h","p","rounded","w","initialValues","email","password","rememberMe","onSubmit","values","logIn","unwrap","then","toast","catch","handleSubmit","errors","touched","htmlFor","as","Input","variant","validate","error","length","colorScheme","Login"],"sourceRoot":""}