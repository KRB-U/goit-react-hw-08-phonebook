{"version":3,"file":"static/js/236.5bc1afda.chunk.js","mappings":"wTAsIMA,GAAeC,EAAAA,EAAAA,KAEN,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAqBjB,OACE,SAACC,EAAA,EAAD,CAAeC,MAAON,EAAtB,UACE,UAACO,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,WACE,SAACC,EAAA,GAAD,KACA,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,EAAG,EAAGC,QAAS,gBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYb,UAAU,KAAKc,QAAQ,KAAnC,SAAwC,kBAGxC,UAACX,EAAA,EAAD,CACEH,UAAU,OACVe,SAvCW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAO,IAAIC,SAASH,EAAMI,eAGhCzB,GACE0B,EAAAA,EAAAA,IAAS,CACPC,KAAMJ,EAAKK,IAAI,QACfC,MAAON,EAAKK,IAAI,SAChBE,SAAUP,EAAKK,IAAI,cAQxB,EAuBSG,YAAU,EACVtB,GAAI,CAAEuB,GAAI,GAJZ,WAME,SAACC,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTT,KAAK,OACLU,MAAM,OACNC,KAAK,OACLC,GAAG,OACHC,aAAa,eACbC,WAAS,KAEX,SAACR,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTG,GAAG,QACHF,MAAM,gBACNV,KAAK,QACLa,aAAa,WAEf,SAACP,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTT,KAAK,WACLU,MAAM,WACNC,KAAK,WACLC,GAAG,WACHC,aAAa,sBAGf,SAACE,EAAA,EAAD,CACEJ,KAAK,SACLF,WAAS,EACTjB,QAAQ,YACRV,GAAI,CAAEuB,GAAI,EAAGW,GAAI,GAJnB,SAKC,uBAQZ,CC5Nc,SAASC,IACtB,OACE,0BAEE,SAAC7C,EAAD,KAIL,C,2BCXG8C,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,8OACD,qBACJN,EAAQ,EAAUG,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx","../node_modules/@mui/icons-material/PersonAddOutlined.js"],"sourcesContent":["import { register } from 'components/redux/auth/operations';\nimport { useDispatch } from 'react-redux';\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport PersonAddOutlined from '@mui/icons-material/PersonAddOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\n// import { Formik, Field } from 'formik';\n// import {\n//   Box,\n//   Button,\n//   Flex,\n//   FormControl,\n//   FormLabel,\n//   FormErrorMessage,\n//   Input,\n//   VStack,\n// } from '@chakra-ui/react';\n// import toast from 'react-hot-toast';\n\n// export const RegisterForm = () => {\n//   const dispatch = useDispatch();\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     const form = e.currentTarget;\n//     dispatch(\n//       register({\n//         name: form.elements.name.value,\n//         email: form.elements.email.value,\n//         password: form.elements.password.value,\n//       })\n//     );\n//     form.reset();\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit} autoComplete=\"off\">\n//       <label>\n//         Username\n//         <input type=\"text\" name=\"name\" />\n//       </label>\n//       <label>\n//         Email\n//         <input type=\"email\" name=\"email\" />\n//       </label>\n//       <label>\n//         Password\n//         <input type=\"password\" name=\"password\" />\n//       </label>\n//       <button type=\"submit\">Register</button>\n//     </form>\n//   );\n\n// return (\n//   <Flex bg=\"gray.100\" align=\"center\" justify=\"center\" h=\"100vh\">\n//     <Box bg=\"white\" p={6} rounded=\"md\" w={64}>\n//       <Formik\n//         initialValues={{\n//           name: '',\n//           email: '',\n//           password: '',\n//         }}\n//         onSubmit={values => {\n//           dispatch(register(values))\n//             .unwrap()\n//             .then(() => {\n//               toast.success('успіх');\n//             })\n//             .catch(() => toast.error('такий юзер є'));\n//         }}\n//       >\n//         {({ handleSubmit, errors, touched }) => (\n//           <form onSubmit={handleSubmit}>\n//             <VStack spacing={4} align=\"flex-start\">\n//               <FormControl>\n//                 <FormLabel htmlFor=\"name\">Name</FormLabel>\n//                 <Field\n//                   as={Input}\n//                   id=\"name\"\n//                   name=\"name\"\n//                   type=\"text\"\n//                   variant=\"filled\"\n//                 />\n//               </FormControl>\n\n//               <FormControl>\n//                 <FormLabel htmlFor=\"email\">Email Address</FormLabel>\n//                 <Field\n//                   as={Input}\n//                   id=\"email\"\n//                   name=\"email\"\n//                   type=\"email\"\n//                   variant=\"filled\"\n//                 />\n//               </FormControl>\n//               <FormControl isInvalid={!!errors.password && touched.password}>\n//                 <FormLabel htmlFor=\"password\">Password</FormLabel>\n//                 <Field\n//                   as={Input}\n//                   id=\"password\"\n//                   name=\"password\"\n//                   type=\"password\"\n//                   variant=\"filled\"\n//                   validate={value => {\n//                     let error;\n\n//                     if (value.length < 6) {\n//                       error = 'Password must contain at least 6 characters';\n//                     }\n\n//                     return error;\n//                   }}\n//                 />\n//                 <FormErrorMessage>{errors.password}</FormErrorMessage>\n//               </FormControl>\n//               <Button type=\"submit\" colorScheme=\"purple\" width=\"full\">\n//                 Register\n//               </Button>\n//             </VStack>\n//           </form>\n//         )}\n//       </Formik>\n//     </Box>\n//   </Flex>\n// );\n// };\n\nconst defaultTheme = createTheme();\n\nexport default function RegisterForm() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // console.dir(data);\n\n    dispatch(\n      register({\n        name: data.get('name'),\n        email: data.get('email'),\n        password: data.get('password'),\n      })\n    );\n    // console.log({\n    //   name: data.get('name'),\n    //   email: data.get('email'),\n    //   password: data.get('password'),\n    // });\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n            <PersonAddOutlined />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Registration\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"name\"\n              label=\"Name\"\n              type=\"name\"\n              id=\"name\"\n              autoComplete=\"current-name\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Register\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n","// import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n\n// import { ChakraProvider } from '@chakra-ui/react';\n\nexport default function Register() {\n  return (\n    <div>\n      {/* <ChakraProvider> */}\n      <RegisterForm />\n      {/* </ChakraProvider> */}\n    </div>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0-6c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm0 8c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4zm-6 4c.22-.72 3.31-2 6-2 2.7 0 5.8 1.29 6 2H9zm-3-3v-3h3v-2H6V7H4v3H1v2h3v3z\"\n}), 'PersonAddOutlined');\nexports.default = _default;"],"names":["defaultTheme","createTheme","RegisterForm","dispatch","useDispatch","ThemeProvider","theme","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","PersonAddOutlined","Typography","variant","onSubmit","event","preventDefault","data","FormData","currentTarget","register","name","get","email","password","noValidate","mt","TextField","margin","required","fullWidth","label","type","id","autoComplete","autoFocus","Button","mb","Register","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}